{
  "version": "1.0.0",
  "agents": {
    "Frontend": {
      "budgets": {
        "lighthouse_score": 90,
        "accessibility_pass": true
      },
      "tests": ["jest_unit", "axe_core_a11y", "lighthouse"],
      "metrics": {
        "lighthouse_score": {
          "comparison": "gte",
          "remediation_steps": [
            "Optimise bundle size, fonts, and media delivery to raise Lighthouse results.",
            "Review Core Web Vitals and prioritise layout stability fixes."
          ],
          "remediation_macros": [
            "::frontendgen-tests",
            "::frontendgen-motion",
            "::frontendgen-access"
          ],
          "weight": 1.3
        },
        "accessibility_pass": {
          "comparison": "eq",
          "remediation_steps": ["Resolve accessibility audit failures and re-run axe-core checks."],
          "remediation_macros": ["::frontendgen-access"],
          "weight": 1.0
        }
      }
    },
    "Backend": {
      "budgets": {
        "api_latency_ms_p95": 300
      },
      "tests": ["pytest_unit", "api_fuzz", "contract"],
      "metrics": {
        "api_latency_ms_p95": {
          "comparison": "lte",
          "remediation_steps": [
            "Profile slow endpoints and optimise database access patterns.",
            "Introduce caching or queueing where appropriate to reduce response times."
          ],
          "remediation_macros": ["::perfprofile", "::backendgen-logging"],
          "weight": 1.5
        }
      }
    },
    "Architect": {
      "budgets": {},
      "tests": ["schema_validation", "macro_dependency"]
    },
    "QA": {
      "budgets": {},
      "tests": ["full_suite"]
    },
    "Knowledge": {
      "budgets": {
        "results_found": 1,
        "coverage_ratio": 0.02,
        "latency_ms": 750
      },
      "tests": ["knowledge_store_health"],
      "metrics": {
        "results_found": {
          "comparison": "gte",
          "remediation_steps": [
            "Expand Brain Blocks index or update retrieval prompts to increase recall.",
            "Review query strategy and ensure domain synonyms are represented in the corpus."
          ],
          "remediation_macros": [],
          "weight": 1.2
        },
        "coverage_ratio": {
          "comparison": "gte",
          "remediation_steps": [
            "Backfill missing knowledge blocks for underserved topics.",
            "Schedule corpus refresh to capture recent governance or design updates."
          ],
          "remediation_macros": [],
          "weight": 1.0
        },
        "latency_ms": {
          "comparison": "lte",
          "remediation_steps": [
            "Optimise knowledge store loading and enable caching for heavy sources.",
            "Profile retrieval bottlenecks and parallelise parsing where safe."
          ],
          "remediation_macros": [],
          "weight": 0.8
        }
      }
    }
  },
  "macros": {
    "required_fields": ["inputs", "outputs", "failure_cases", "dependencies", "context"],
    "default_context": ["dev", "staging", "prod"]
  }
}
