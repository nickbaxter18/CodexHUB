/**
 * ==========================================================================
 * Header & Purpose
 * ==========================================================================
 * Module Name: macros/types.ts
 * Responsibility: Provide shared TypeScript types consumed by autogenerated
 *                 CodexBridge macros so that stubs compile under strict tooling.
 * Why it matters: Generated macros require a canonical MacroContext interface
 *                 describing the automation environment. Defining it centrally
 *                 avoids duplication and documents available execution data.
 */

// ==========================================================================
// Imports / Dependencies
// ==========================================================================
// None required yet. This module intentionally remains dependency-free so it
// can be consumed by lightweight build targets.

// ==========================================================================
// Types / Interfaces / Schemas
// ==========================================================================
export type MacroContext = {
  /**
   * Unique identifier for the macro execution request.
   */
  requestId?: string;
  /**
   * Authenticated user or agent identifier initiating the macro.
   */
  actor?: string;
  /**
   * Arbitrary metadata supplied by upstream planners.
   */
  metadata?: Record<string, unknown>;
  /**
   * Provides filesystem roots, configuration values, or other execution knobs.
   */
  environment?: Record<string, unknown>;
  /**
   * Additional context not yet modelled by the blueprint.
   */
  [key: string]: unknown;
};

export type MacroResult = unknown;

// ==========================================================================
// Core Logic / Implementation
// ==========================================================================
// Type modules intentionally omit runtime logic.

// ==========================================================================
// Error & Edge Handling
// ==========================================================================
// Consumers should treat every optional field defensively and assert presence
// where required before dereferencing.

// ==========================================================================
// Performance Considerations
// ==========================================================================
// Pure type exports incur zero runtime overhead.

// ==========================================================================
// Exports / Public API
// ==========================================================================
